#!/bin/bash

set -e
set -o pipefail

USERNAME="udunuss"
BRANCH="main"
REPO="dotfiles"
FROM_TO=(".config;$HOME")
GITHUB_TOKEN=${GITHUB_TOKEN:-""}
AUTH_HEADER=${GITHUB_TOKEN:+"Authorization: token $GITHUB_TOKEN"}

download_item() {
    local path=$1
    local to=$2
    local api_url="https://api.github.com/repos/$USERNAME/$REPO/contents/$path?ref=$BRANCH"
    local response=$(curl -sS -H "Accept: application/vnd.github.v3+json" -H "$AUTH_HEADER" "$api_url")

    if echo "$response" | jq -e '.message and .message | contains("API rate limit exceeded")' > /dev/null; then
        echo "Error: GitHub API rate limit exceeded. Set GITHUB_TOKEN env variable." >&2
        exit 1
    fi

    echo "$response" | jq -c '.[]?' | while read -r item; do
        local item_path=$(echo "$item" | jq -r '.path')
        local item_type=$(echo "$item" | jq -r '.type')
        local download_url=$(echo "$item" | jq -r '.download_url')
        local local_path="$to/$item_path"

        if [ "$item_type" = "dir" ]; then
            mkdir -p "$local_path"
            download_item "$item_path" "$to"
        elif [ "$item_type" = "file" ]; then
            if [ -f "$local_path" ]; then
                local_date=$(stat -c %Y "$local_path")
                commit_info=$(curl -sS -H "$AUTH_HEADER" "https://api.github.com/repos/$USERNAME/$REPO/commits?path=$item_path&page=1&per_page=1")
                commit_date=$(echo "$commit_info" | jq -r '.[0].commit.author.date')
                
                if [ $(date -d "$commit_date" +%s) -gt $(date -d "@$local_date" +%s) ]; then
                    echo "Updating $local_path"
                    curl -sS -o "$local_path" "$download_url"
                fi
            else
                echo "Downloading $local_path"
                curl -sS -o "$local_path" "$download_url"
            fi
        fi
    done
}

for f in "${FROM_TO[@]}"; do
    from=$(echo "$f" | cut -d ";" -f 1)
    to=$(echo "$f" | cut -d ";" -f 2)
    download_item "$from" "$to"
done
